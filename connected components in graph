#include <bits/stdc++.h>
#include <iostream>
using namespace std;

static int N=1e3+10;
bool vis[N];
vector<int>graph[N];
vector<vector<int>>cc;
vector<int>ccc;

void dfs(int vertex){ 
	vis[vertex]=true;
	ccc.push_back(vertex);
	for(int child:graph[vertex]){
		if(vis[child])continue;
		dfs[child];
	}
}
int main() {
int n,e;
cin>>n>>e;
for(int i=0;i<e;i++){
	int v1,v2;
	cin>>v1>>v2;
	graph[v1].push_back(v2);
	graph[v2].push_back(v1);
}
int cnt=0;
for(int i=1;i<=n;i++){
	if(vis[i])continue;
	ccc.clear();
	dfs(i);
	cc.push_back(ccc);
	cnt++;
}
cout<<cnt<<endl;
// can print cc and cc size will show the connected components
return 0;	
}
